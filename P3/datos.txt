__OPTIM0__================================================
__TEST01__------------------------------------------------
resultado = 4	popcount1 (lenguaje C - for):        1 us
resultado = 4	popcount2 (lenguaje C - while):        0 us
resultado = 4	popcount3 (leng.ASM-body while 4i):        0 us
resultado = 4	popcount4 (leng.ASM-body while 3i):        0 us
resultado = 4	popcount5 (CS:APP2e 3.49-group 8b):        0 us
resultado = 4	popcount6 (Wikipedia- naive - 32b):        0 us
resultado = 4	popcount7 (Wikipedia- naive -128b):        0 us
resultado = 4	popcount8 (asm SSE3 - pshufb 128b):        0 us
resultado = 4	popcount9 (asm SSE4- popcount 32b):        0 us
resultado = 4	popcount10(asm SSE4- popcount128b):        0 us
calculado = 4
__TEST02__------------------------------------------------
resultado = 156	popcount1 (lenguaje C - for):        1 us
resultado = 156	popcount2 (lenguaje C - while):        1 us
resultado = 156	popcount3 (leng.ASM-body while 4i):        1 us
resultado = 156	popcount4 (leng.ASM-body while 3i):        0 us
resultado = 156	popcount5 (CS:APP2e 3.49-group 8b):        1 us
resultado = 156	popcount6 (Wikipedia- naive - 32b):        0 us
resultado = 156	popcount7 (Wikipedia- naive -128b):        0 us
resultado = 156	popcount8 (asm SSE3 - pshufb 128b):        0 us
resultado = 156	popcount9 (asm SSE4- popcount 32b):        0 us
resultado = 156	popcount10(asm SSE4- popcount128b):        0 us
calculado = 156
__TEST03__------------------------------------------------
resultado = 116	popcount1 (lenguaje C - for):        1 us
resultado = 116	popcount2 (lenguaje C - while):        1 us
resultado = 116	popcount3 (leng.ASM-body while 4i):        1 us
resultado = 116	popcount4 (leng.ASM-body while 3i):        0 us
resultado = 116	popcount5 (CS:APP2e 3.49-group 8b):        1 us
resultado = 116	popcount6 (Wikipedia- naive - 32b):        0 us
resultado = 116	popcount7 (Wikipedia- naive -128b):        0 us
resultado = 116	popcount8 (asm SSE3 - pshufb 128b):        0 us
resultado = 116	popcount9 (asm SSE4- popcount 32b):        0 us
resultado = 116	popcount10(asm SSE4- popcount128b):        0 us
calculado = 116
__TEST04__------------------------------------------------
resultado = 10485760	popcount1 (lenguaje C - for):    74223 us
resultado = 10485760	popcount2 (lenguaje C - while):    39332 us
resultado = 10485760	popcount3 (leng.ASM-body while 4i):    11424 us
resultado = 10485760	popcount4 (leng.ASM-body while 3i):    10326 us
resultado = 10485760	popcount5 (CS:APP2e 3.49-group 8b):    19307 us
resultado = 10485760	popcount6 (Wikipedia- naive - 32b):     7270 us
resultado = 10485760	popcount7 (Wikipedia- naive -128b):     5456 us
resultado = 10485760	popcount8 (asm SSE3 - pshufb 128b):      692 us
resultado = 10485760	popcount9 (asm SSE4- popcount 32b):     2560 us
resultado = 10485760	popcount10(asm SSE4- popcount128b):     1191 us
calculado = 10485760
__OPTIMg__================================================
__TEST01__------------------------------------------------
resultado = 4	popcount1 (lenguaje C - for):        0 us
resultado = 4	popcount2 (lenguaje C - while):        0 us
resultado = 4	popcount3 (leng.ASM-body while 4i):        0 us
resultado = 4	popcount4 (leng.ASM-body while 3i):        1 us
resultado = 4	popcount5 (CS:APP2e 3.49-group 8b):        0 us
resultado = 4	popcount6 (Wikipedia- naive - 32b):        0 us
resultado = 4	popcount7 (Wikipedia- naive -128b):        0 us
resultado = 4	popcount8 (asm SSE3 - pshufb 128b):        0 us
resultado = 4	popcount9 (asm SSE4- popcount 32b):        0 us
resultado = 4	popcount10(asm SSE4- popcount128b):        0 us
calculado = 4
__TEST02__------------------------------------------------
resultado = 156	popcount1 (lenguaje C - for):        0 us
resultado = 156	popcount2 (lenguaje C - while):        0 us
resultado = 156	popcount3 (leng.ASM-body while 4i):        1 us
resultado = 156	popcount4 (leng.ASM-body while 3i):        0 us
resultado = 156	popcount5 (CS:APP2e 3.49-group 8b):        0 us
resultado = 156	popcount6 (Wikipedia- naive - 32b):        0 us
resultado = 156	popcount7 (Wikipedia- naive -128b):        0 us
resultado = 156	popcount8 (asm SSE3 - pshufb 128b):        0 us
resultado = 156	popcount9 (asm SSE4- popcount 32b):        0 us
resultado = 156	popcount10(asm SSE4- popcount128b):        0 us
calculado = 156
__TEST03__------------------------------------------------
resultado = 116	popcount1 (lenguaje C - for):        0 us
resultado = 116	popcount2 (lenguaje C - while):        0 us
resultado = 116	popcount3 (leng.ASM-body while 4i):        0 us
resultado = 116	popcount4 (leng.ASM-body while 3i):        0 us
resultado = 116	popcount5 (CS:APP2e 3.49-group 8b):        0 us
resultado = 116	popcount6 (Wikipedia- naive - 32b):        0 us
resultado = 116	popcount7 (Wikipedia- naive -128b):        0 us
resultado = 116	popcount8 (asm SSE3 - pshufb 128b):        0 us
resultado = 116	popcount9 (asm SSE4- popcount 32b):        0 us
resultado = 116	popcount10(asm SSE4- popcount128b):        0 us
calculado = 116
__TEST04__------------------------------------------------
resultado = 10485760	popcount1 (lenguaje C - for):    20505 us
resultado = 10485760	popcount2 (lenguaje C - while):     8115 us
resultado = 10485760	popcount3 (leng.ASM-body while 4i):    10051 us
resultado = 10485760	popcount4 (leng.ASM-body while 3i):     9515 us
resultado = 10485760	popcount5 (CS:APP2e 3.49-group 8b):     4965 us
resultado = 10485760	popcount6 (Wikipedia- naive - 32b):     2559 us
resultado = 10485760	popcount7 (Wikipedia- naive -128b):     2163 us
resultado = 10485760	popcount8 (asm SSE3 - pshufb 128b):      376 us
resultado = 10485760	popcount9 (asm SSE4- popcount 32b):      621 us
resultado = 10485760	popcount10(asm SSE4- popcount128b):      329 us
calculado = 10485760
__OPTIM1__================================================
__TEST01__------------------------------------------------
resultado = 4	popcount1 (lenguaje C - for):        0 us
resultado = 4	popcount2 (lenguaje C - while):        0 us
resultado = 4	popcount3 (leng.ASM-body while 4i):        0 us
resultado = 4	popcount4 (leng.ASM-body while 3i):        1 us
resultado = 4	popcount5 (CS:APP2e 3.49-group 8b):        0 us
resultado = 4	popcount6 (Wikipedia- naive - 32b):        0 us
resultado = 4	popcount7 (Wikipedia- naive -128b):        0 us
resultado = 4	popcount8 (asm SSE3 - pshufb 128b):        0 us
resultado = 4	popcount9 (asm SSE4- popcount 32b):        0 us
resultado = 4	popcount10(asm SSE4- popcount128b):        0 us
calculado = 4
__TEST02__------------------------------------------------
resultado = 156	popcount1 (lenguaje C - for):        0 us
resultado = 156	popcount2 (lenguaje C - while):        0 us
resultado = 156	popcount3 (leng.ASM-body while 4i):        1 us
resultado = 156	popcount4 (leng.ASM-body while 3i):        0 us
resultado = 156	popcount5 (CS:APP2e 3.49-group 8b):        1 us
resultado = 156	popcount6 (Wikipedia- naive - 32b):        0 us
resultado = 156	popcount7 (Wikipedia- naive -128b):        0 us
resultado = 156	popcount8 (asm SSE3 - pshufb 128b):        0 us
resultado = 156	popcount9 (asm SSE4- popcount 32b):        0 us
resultado = 156	popcount10(asm SSE4- popcount128b):        0 us
calculado = 156
__TEST03__------------------------------------------------
resultado = 116	popcount1 (lenguaje C - for):        0 us
resultado = 116	popcount2 (lenguaje C - while):        0 us
resultado = 116	popcount3 (leng.ASM-body while 4i):        0 us
resultado = 116	popcount4 (leng.ASM-body while 3i):        0 us
resultado = 116	popcount5 (CS:APP2e 3.49-group 8b):        0 us
resultado = 116	popcount6 (Wikipedia- naive - 32b):        0 us
resultado = 116	popcount7 (Wikipedia- naive -128b):        0 us
resultado = 116	popcount8 (asm SSE3 - pshufb 128b):        0 us
resultado = 116	popcount9 (asm SSE4- popcount 32b):        0 us
resultado = 116	popcount10(asm SSE4- popcount128b):        0 us
calculado = 116
__TEST04__------------------------------------------------
resultado = 10485760	popcount1 (lenguaje C - for):    12880 us
resultado = 10485760	popcount2 (lenguaje C - while):     8818 us
resultado = 10485760	popcount3 (leng.ASM-body while 4i):    12488 us
resultado = 10485760	popcount4 (leng.ASM-body while 3i):     9446 us
resultado = 10485760	popcount5 (CS:APP2e 3.49-group 8b):     5258 us
resultado = 10485760	popcount6 (Wikipedia- naive - 32b):     2560 us
resultado = 10485760	popcount7 (Wikipedia- naive -128b):     2079 us
resultado = 10485760	popcount8 (asm SSE3 - pshufb 128b):      377 us
resultado = 10485760	popcount9 (asm SSE4- popcount 32b):      451 us
resultado = 10485760	popcount10(asm SSE4- popcount128b):      320 us
calculado = 10485760
__OPTIM2__================================================
__TEST01__------------------------------------------------
resultado = 4	popcount1 (lenguaje C - for):        0 us
resultado = 4	popcount2 (lenguaje C - while):        0 us
resultado = 4	popcount3 (leng.ASM-body while 4i):        0 us
resultado = 4	popcount4 (leng.ASM-body while 3i):        0 us
resultado = 4	popcount5 (CS:APP2e 3.49-group 8b):        0 us
resultado = 4	popcount6 (Wikipedia- naive - 32b):        0 us
resultado = 4	popcount7 (Wikipedia- naive -128b):        0 us
resultado = 4	popcount8 (asm SSE3 - pshufb 128b):        0 us
resultado = 4	popcount9 (asm SSE4- popcount 32b):        0 us
resultado = 4	popcount10(asm SSE4- popcount128b):        0 us
calculado = 4
__TEST02__------------------------------------------------
resultado = 156	popcount1 (lenguaje C - for):        0 us
resultado = 156	popcount2 (lenguaje C - while):        0 us
resultado = 156	popcount3 (leng.ASM-body while 4i):        1 us
resultado = 156	popcount4 (leng.ASM-body while 3i):        0 us
resultado = 156	popcount5 (CS:APP2e 3.49-group 8b):        1 us
resultado = 156	popcount6 (Wikipedia- naive - 32b):        0 us
resultado = 156	popcount7 (Wikipedia- naive -128b):        0 us
resultado = 156	popcount8 (asm SSE3 - pshufb 128b):        0 us
resultado = 156	popcount9 (asm SSE4- popcount 32b):        1 us
resultado = 156	popcount10(asm SSE4- popcount128b):        0 us
calculado = 156
__TEST03__------------------------------------------------
resultado = 116	popcount1 (lenguaje C - for):        0 us
resultado = 116	popcount2 (lenguaje C - while):        1 us
resultado = 116	popcount3 (leng.ASM-body while 4i):        0 us
resultado = 116	popcount4 (leng.ASM-body while 3i):        0 us
resultado = 116	popcount5 (CS:APP2e 3.49-group 8b):        0 us
resultado = 116	popcount6 (Wikipedia- naive - 32b):        0 us
resultado = 116	popcount7 (Wikipedia- naive -128b):        0 us
resultado = 116	popcount8 (asm SSE3 - pshufb 128b):        0 us
resultado = 116	popcount9 (asm SSE4- popcount 32b):        0 us
resultado = 116	popcount10(asm SSE4- popcount128b):        0 us
calculado = 116
__TEST04__------------------------------------------------
resultado = 10485760	popcount1 (lenguaje C - for):    20095 us
resultado = 10485760	popcount2 (lenguaje C - while):     8205 us
resultado = 10485760	popcount3 (leng.ASM-body while 4i):    10013 us
resultado = 10485760	popcount4 (leng.ASM-body while 3i):     9533 us
resultado = 10485760	popcount5 (CS:APP2e 3.49-group 8b):     4322 us
resultado = 10485760	popcount6 (Wikipedia- naive - 32b):     2189 us
resultado = 10485760	popcount7 (Wikipedia- naive -128b):     1990 us
resultado = 10485760	popcount8 (asm SSE3 - pshufb 128b):      374 us
resultado = 10485760	popcount9 (asm SSE4- popcount 32b):      453 us
resultado = 10485760	popcount10(asm SSE4- popcount128b):      315 us
calculado = 10485760
__OPTIM0__================================================


2018-11-01 19:39                                                        Página 1


0      1      2	     3	    4	   5	  6	 7	8      9      10
73557  73695  73549  73899  73508  73528  73505	 73578	73548  73508  73871
38900  40956  40620  38819  38986  41645  40474	 41403	39676  39033  40146
11225  11176  11209  11208  11202  11191  11193	 11205	11215  11201  11060
10288  10303  10287  10317  10307  10308  10319	 10309	10296  10298  10121
19272  19267  19269  19266  19265  19263  19267	 19270	19275  19263  19267
7279   7268   7265   7262   7258   7261	  7262	 7265	7269   7262   7084
5453   5453   5453   5447   5451   5451	  5452	 5451	5456   5451   5315
708    697    697    689    690	   690	  708	 693	692    736    675
2571   2558   2569   2570   2565   2565	  2564	 2576	2565   2569   2559
1193   1194   1194   1188   1188   1189	  1190	 1189	1192   1193   1189






__OPTIMg__================================================


2018-11-01 19:39                                                        Página 1


0      1      2	     3	    4	   5	  6	 7	8      9      10
20438  20462  20445  20489  20432  20439  20436	 20609	20430  20434  20415
8124   10869  8237   8354   8191   8207	  8128	 8239	8126   8173   8150
10076  10119  10148  10287  10123  10063  10182	 10122	10147  10077  10060
9521   9525   9482   9587   9512   9521	  9517	 9529	9512   9516   9511
4981   4959   4993   5031   4957   4957	  4965	 4958	4959   4957   4958
3063   2560   2621   2650   2576   2560	  2559	 2568	2585   2558   2560
2220   2173   2233   2276   2172   2162	  2164	 2172	2162   2161   2164
403    377    403    411    382	   375	  386	 374	379    373    370
675    621    635    623    621	   620	  620	 619	620    620    620
871    317    347    350    318	   316	  319	 317	317    316    316






__OPTIM1__================================================


2018-11-01 19:39                                                        Página 1


0      1      2	     3	    4	   5	  6	 7	8      9      10
12869  13005  12934  12867  12854  12865  12868	 12864	12862  12880  12890
8165   8350   8245   8180   8193   8205	  8195	 8202	8171   8158   8214
12382  12388  12662  12377  12378  12377  12379	 12378	12378  12382  12380
9460   9485   9583   9444   9437   9460	  9466	 9437	9449   9456   9432
5263   5260   5345   5257   5259   5261	  5262	 5260	5263   5260   5260
2559   2559   2697   2559   2559   2558	  2559	 2579	2560   2560   2560
2069   2070   2207   2069   2078   2068	  2069	 2078	2068   2070   2080
379    379    421    374    371	   381	  373	 381	374    379    373
452    450    499    450    449	   453	  449	 455	448    448    450
324    317    355    318    316	   322	  317	 324	316    318    319






__OPTIM2__================================================


2018-11-01 19:39                                                        Página 1


0      1      2	     3	    4	   5	  6	 7	8      9      10
12893  12872  12857  12853  12794  12865  12776	 12782	12853  12786  12788
7890   8002   7970   7955   7838   8009	  7811	 7854	7947   7808   7815
10011  10047  9986   9972   10016  10086  9998	 9982	9997   10011  9973
9492   9531   9478   9462   9534   9539	  9487	 9496	9449   9485   9483
4179   4226   4185   4217   4359   4219	  4178	 4179	4213   4183   4177
2200   2281   2190   2235   2219   2283	  2191	 2190	2265   2190   2190
2000   2091   2003   2081   2007   2108	  1999	 2002	2145   1999   1999
374    378    383    409    400	   419	  375	 377	497    379    377
455    454    458    518    461	   515	  454	 453	591    469    456
323    317    328    344    329	   351	  318	 317	380    325    317






